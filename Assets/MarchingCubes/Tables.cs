using UnityEngine;

namespace SE {
public static class Tables {
public readonly static Vector3[] CellOffsets = {
	new Vector3(0f,0f,0f), new Vector3(1f,0f,0f), new Vector3(1f,0f,1f), new Vector3(0f,0f,1f), 
	new Vector3(0f,1f,0f), new Vector3(1f,1f,0f), new Vector3(1f,1f,1f), new Vector3(0f,1f,1f) 
};	

public readonly static int[,] MCEdgeToEdgeOffset = {
	{1, 0, 1, 1}, // 0
	{1, 0, 1, 2}, // 1
	{1, 0, 0, 1}, // 2
	{0, 0, 1, 2}, // 3
	{1, 1, 1, 1}, // 4
	{1, 1, 1, 2}, // 5
	{1, 1, 0, 1}, // 6
	{0, 1, 1, 2}, // 7
	{0, 1, 1, 0}, // 8
	{1, 1, 1, 0}, // 9
	{1, 1, 0, 0}, // 10
	{0, 1, 0, 0}  // 11
};

public readonly static int[][] triTable = new int[][] {
	new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1},
	new int[] {8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1},
	new int[] {3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1},
	new int[] {4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1},
	new int[] {4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1},
	new int[] {9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1},
	new int[] {10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1},
	new int[] {5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1},
	new int[] {5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1},
	new int[] {8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1},
	new int[] {2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1},
	new int[] {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1},
	new int[] {11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1},
	new int[] {5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1},
	new int[] {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1},
	new int[] {11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1},
	new int[] {2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1},
	new int[] {6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1},
	new int[] {3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1},
	new int[] {6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1},
	new int[] {6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1},
	new int[] {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1},
	new int[] {7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1},
	new int[] {3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1},
	new int[] {0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1},
	new int[] {9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1},
	new int[] {8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1},
	new int[] {5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1},
	new int[] {0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1},
	new int[] {6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1},
	new int[] {10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1},
	new int[] {1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1},
	new int[] {0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1},
	new int[] {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1},
	new int[] {6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1},
	new int[] {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1},
	new int[] {8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1},
	new int[] {3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1},
	new int[] {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1},
	new int[] {10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1},
	new int[] {2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1},
	new int[] {7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1},
	new int[] {2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1},
	new int[] {1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1},
	new int[] {11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1},
	new int[] {8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1},
	new int[] {0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1},
	new int[] {7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1},
	new int[] {7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1},
	new int[] {10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1},
	new int[] {0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1},
	new int[] {7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1},
	new int[] {6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1},
	new int[] {4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1},
	new int[] {10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1},
	new int[] {8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1},
	new int[] {1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1},
	new int[] {10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1},
	new int[] {10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1},
	new int[] {9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1},
	new int[] {7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1},
	new int[] {3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1},
	new int[] {7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1},
	new int[] {3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1},
	new int[] {6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1},
	new int[] {9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1},
	new int[] {1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1},
	new int[] {4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1},
	new int[] {7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1},
	new int[] {6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1},
	new int[] {0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1},
	new int[] {6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1},
	new int[] {0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1},
	new int[] {11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1},
	new int[] {6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1},
	new int[] {5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1},
	new int[] {9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1},
	new int[] {1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1},
	new int[] {10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1},
	new int[] {0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1},
	new int[] {11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1},
	new int[] {9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1},
	new int[] {7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1},
	new int[] {2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1},
	new int[] {9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1},
	new int[] {9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1},
	new int[] {1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1},
	new int[] {0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1},
	new int[] {10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1},
	new int[] {2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1},
	new int[] {0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1},
	new int[] {0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1},
	new int[] {9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1},
	new int[] {5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1},
	new int[] {5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1},
	new int[] {8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1},
	new int[] {9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1},
	new int[] {1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1},
	new int[] {3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1},
	new int[] {4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1},
	new int[] {9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1},
	new int[] {11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1},
	new int[] {2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1},
	new int[] {9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1},
	new int[] {3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1},
	new int[] {1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1},
	new int[] {4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1},
	new int[] {0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1},
	new int[] {1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
};

public readonly static int[] edgeTable = {
	0x0  , 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,
	0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,
	0x190, 0x99 , 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,
	0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,
	0x230, 0x339, 0x33 , 0x13a, 0x636, 0x73f, 0x435, 0x53c,
	0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,
	0x3a0, 0x2a9, 0x1a3, 0xaa , 0x7a6, 0x6af, 0x5a5, 0x4ac,
	0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,
	0x460, 0x569, 0x663, 0x76a, 0x66 , 0x16f, 0x265, 0x36c,
	0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,
	0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff , 0x3f5, 0x2fc,
	0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,
	0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55 , 0x15c,
	0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,
	0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc ,
	0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,
	0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,
	0xcc , 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,
	0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,
	0x15c, 0x55 , 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,
	0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,
	0x2fc, 0x3f5, 0xff , 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,
	0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,
	0x36c, 0x265, 0x16f, 0x66 , 0x76a, 0x663, 0x569, 0x460,
	0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,
	0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa , 0x1a3, 0x2a9, 0x3a0,
	0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,
	0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33 , 0x339, 0x230,
	0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,
	0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99 , 0x190,
	0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,
	0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0   
};

public static byte[][][] MCLodTable = new byte[][][] {
	new byte[][] { // lod 0 (0)
	}, 
	new byte[][] { // lod 1 (1)
		new byte[] { 0, 25, 25, 8, 16, 25, 25, 24 },
		new byte[] { 4, 21, 21, 0, 20, 21, 21, 16 },
		new byte[] { 32, 41, 41, 40, 0, 41, 41, 8 },
		new byte[] { 36, 37, 37, 32, 4, 37, 37, 0 },
		new byte[] { 16, 21, 0, 0, 16, 21, 25, 16 },
		new byte[] { 0, 37, 32, 32, 0, 37, 41, 0 },
		new byte[] { 4, 37, 37, 0, 4, 21, 21, 0 },
		new byte[] { 0, 41, 41, 8, 0, 25, 25, 8 },
		new byte[] { 0, 37, 41, 0, 0, 21, 25, 0 }
	}, 
	new byte[][] { // lod 2 (10)
		new byte[] { 0, 42, 42, 8, 32, 42, 42, 40 },
		new byte[] { 4, 38, 38, 0, 36, 38, 38, 32 },
		new byte[] { 16, 26, 26, 24, 0, 26, 26, 8 },
		new byte[] { 20, 22, 22, 16, 4, 22, 22, 0 },
		new byte[] { 32, 38, 0, 0, 32, 38, 42, 32 },
		new byte[] { 0, 22, 16, 16, 0, 22, 26, 0 },
		new byte[] { 4, 22, 22, 0, 4, 38, 38, 0 },
		new byte[] { 0, 26, 26, 8, 0, 42, 42, 8 },
		new byte[] { 0, 22, 26, 0, 0, 38, 42, 0 }
	}, 
	new byte[][] { // lod 3 (11)
	}, 
	new byte[][] { // lod 4 (100)
		new byte[] { 0, 38, 38, 2, 32, 38, 38, 34 },
		new byte[] { 1, 37, 37, 0, 33, 37, 37, 32 },
		new byte[] { 16, 22, 22, 18, 0, 22, 22, 2 },
		new byte[] { 17, 21, 21, 16, 1, 21, 21, 0 },
		new byte[] { 32, 37, 0, 0, 32, 37, 38, 32 },
		new byte[] { 0, 21, 16, 16, 0, 21, 22, 0 },
		new byte[] { 1, 21, 21, 0, 1, 37, 37, 0 },
		new byte[] { 0, 22, 22, 2, 0, 38, 38, 2 },
		new byte[] { 0, 21, 22, 0, 0, 37, 38, 0 }
	}, 
	new byte[][] { // lod 5 (101)
		new byte[] { 2, 0, 21, 22, 2, 0, 37, 38 },
		new byte[] { 18, 16, 21, 22, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 34, 32, 37, 38 },
		new byte[] { 8, 25, 21, 0, 8, 41, 37, 0 },
		new byte[] { 24, 25, 21, 16, 8, 8, 0, 0 },
		new byte[] { 8, 8, 0, 0, 40, 41, 37, 32 }
	}, 
	new byte[][] { // lod 6 (110)
		new byte[] { 8, 0, 22, 26, 8, 0, 38, 42 },
		new byte[] { 24, 16, 22, 26, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 40, 32, 38, 42 },
		new byte[] { 1, 21, 22, 0, 1, 37, 38, 0 },
		new byte[] { 17, 21, 22, 16, 1, 1, 0, 0 },
		new byte[] { 1, 1, 0, 0, 33, 37, 38, 32 }
	}, 
	new byte[][] { // lod 7 (111)
	}, 
	new byte[][] { // lod 8 (1000)
		new byte[] { 0, 41, 41, 1, 32, 41, 41, 33 },
		new byte[] { 2, 42, 42, 0, 34, 42, 42, 32 },
		new byte[] { 16, 25, 25, 17, 0, 25, 25, 1 },
		new byte[] { 18, 26, 26, 16, 2, 26, 26, 0 },
		new byte[] { 32, 42, 0, 0, 32, 42, 41, 32 },
		new byte[] { 0, 26, 16, 16, 0, 26, 25, 0 },
		new byte[] { 2, 26, 26, 0, 2, 42, 42, 0 },
		new byte[] { 0, 25, 25, 1, 0, 41, 41, 1 },
		new byte[] { 0, 26, 25, 0, 0, 42, 41, 0 }
	}, 
	new byte[][] { // lod 9 (1001)
		new byte[] { 2, 0, 41, 42, 2, 0, 25, 26 },
		new byte[] { 34, 32, 41, 42, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 18, 16, 25, 26 },
		new byte[] { 4, 37, 41, 0, 4, 21, 25, 0 },
		new byte[] { 36, 37, 41, 32, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 20, 21, 25, 16 }
	}, 
	new byte[][] { // lod 10 (1010)
		new byte[] { 1, 0, 26, 25, 1, 0, 42, 41 },
		new byte[] { 17, 16, 26, 25, 1, 0, 0, 1 },
		new byte[] { 1, 0, 0, 1, 33, 32, 42, 41 },
		new byte[] { 4, 22, 26, 0, 4, 38, 42, 0 },
		new byte[] { 20, 22, 26, 16, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 36, 38, 42, 32 }
	}, 
	new byte[][] { // lod 11 (1011)
	}, 
	new byte[][] { // lod 12 (1100)
	}, 
	new byte[][] { // lod 13 (1101)
	}, 
	new byte[][] { // lod 14 (1110)
	}, 
	new byte[][] { // lod 15 (1111)
	}, 
	new byte[][] { // lod 16 (10000)
		new byte[] { 0, 26, 26, 8, 2, 26, 26, 10 },
		new byte[] { 4, 22, 22, 0, 6, 22, 22, 2 },
		new byte[] { 1, 25, 25, 9, 0, 25, 25, 8 },
		new byte[] { 5, 21, 21, 1, 4, 21, 21, 0 },
		new byte[] { 2, 22, 0, 0, 2, 22, 26, 2 },
		new byte[] { 0, 21, 1, 1, 0, 21, 25, 0 },
		new byte[] { 4, 21, 21, 0, 4, 22, 22, 0 },
		new byte[] { 0, 25, 25, 8, 0, 26, 26, 8 },
		new byte[] { 0, 21, 25, 0, 0, 22, 26, 0 }
	}, 
	new byte[][] { // lod 17 (10001)
		new byte[] { 2, 0, 25, 26, 2, 0, 21, 22 },
		new byte[] { 10, 8, 25, 26, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 6, 4, 21, 22 },
		new byte[] { 32, 41, 25, 0, 32, 37, 21, 0 },
		new byte[] { 40, 41, 25, 8, 32, 32, 0, 0 },
		new byte[] { 32, 32, 0, 0, 36, 37, 21, 4 }
	}, 
	new byte[][] { // lod 18 (10010)
		new byte[] { 32, 0, 26, 42, 32, 0, 22, 38 },
		new byte[] { 40, 8, 26, 42, 32, 0, 0, 32 },
		new byte[] { 32, 0, 0, 32, 36, 4, 22, 38 },
		new byte[] { 1, 25, 26, 0, 1, 21, 22, 0 },
		new byte[] { 9, 25, 26, 8, 1, 1, 0, 0 },
		new byte[] { 1, 1, 0, 0, 5, 21, 22, 4 }
	}, 
	new byte[][] { // lod 19 (10011)
	}, 
	new byte[][] { // lod 20 (10100)
		new byte[] { 8, 0, 21, 25, 8, 0, 22, 26 },
		new byte[] { 9, 1, 21, 25, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 10, 2, 22, 26 },
		new byte[] { 32, 37, 21, 0, 32, 38, 22, 0 },
		new byte[] { 33, 37, 21, 1, 32, 32, 0, 0 },
		new byte[] { 32, 32, 0, 0, 34, 38, 22, 2 }
	}, 
	new byte[][] { // lod 21 (10101)
		new byte[] { 34, 32, 0, 2, 38, 37, 21, 22 },
		new byte[] { 10, 8, 25, 26, 2, 0, 21, 22 },
		new byte[] { 40, 41, 25, 8, 32, 37, 21, 0 }
	}, 
	new byte[][] { // lod 22 (10110)
		new byte[] { 33, 1, 0, 32, 37, 21, 22, 38 },
		new byte[] { 40, 8, 26, 42, 32, 0, 22, 38 },
		new byte[] { 9, 25, 26, 8, 1, 21, 22, 0 }
	}, 
	new byte[][] { // lod 23 (10111)
	}, 
	new byte[][] { // lod 24 (11000)
		new byte[] { 32, 0, 25, 41, 32, 0, 26, 42 },
		new byte[] { 33, 1, 25, 41, 32, 0, 0, 32 },
		new byte[] { 32, 0, 0, 32, 34, 2, 26, 42 },
		new byte[] { 4, 21, 25, 0, 4, 22, 26, 0 },
		new byte[] { 5, 21, 25, 1, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 6, 22, 26, 2 }
	}, 
	new byte[][] { // lod 25 (11001)
		new byte[] { 6, 4, 0, 2, 22, 21, 25, 26 },
		new byte[] { 34, 32, 41, 42, 2, 0, 25, 26 },
		new byte[] { 36, 37, 41, 32, 4, 21, 25, 0 }
	}, 
	new byte[][] { // lod 26 (11010)
		new byte[] { 36, 4, 0, 32, 38, 22, 26, 42 },
		new byte[] { 33, 1, 25, 41, 32, 0, 26, 42 },
		new byte[] { 5, 21, 25, 1, 4, 22, 26, 0 }
	}, 
	new byte[][] { // lod 27 (11011)
	}, 
	new byte[][] { // lod 28 (11100)
	}, 
	new byte[][] { // lod 29 (11101)
	}, 
	new byte[][] { // lod 30 (11110)
	}, 
	new byte[][] { // lod 31 (11111)
	}, 
	new byte[][] { // lod 32 (100000)
		new byte[] { 0, 41, 41, 8, 1, 41, 41, 9 },
		new byte[] { 4, 37, 37, 0, 5, 37, 37, 1 },
		new byte[] { 2, 42, 42, 10, 0, 42, 42, 8 },
		new byte[] { 6, 38, 38, 2, 4, 38, 38, 0 },
		new byte[] { 1, 37, 0, 0, 1, 37, 41, 1 },
		new byte[] { 0, 38, 2, 2, 0, 38, 42, 0 },
		new byte[] { 4, 38, 38, 0, 4, 37, 37, 0 },
		new byte[] { 0, 42, 42, 8, 0, 41, 41, 8 },
		new byte[] { 0, 38, 42, 0, 0, 37, 41, 0 }
	}, 
	new byte[][] { // lod 33 (100001)
		new byte[] { 16, 0, 41, 25, 16, 0, 37, 21 },
		new byte[] { 24, 8, 41, 25, 16, 0, 0, 16 },
		new byte[] { 16, 0, 0, 16, 20, 4, 37, 21 },
		new byte[] { 2, 42, 41, 0, 2, 38, 37, 0 },
		new byte[] { 10, 42, 41, 8, 2, 2, 0, 0 },
		new byte[] { 2, 2, 0, 0, 6, 38, 37, 4 }
	}, 
	new byte[][] { // lod 34 (100010)
		new byte[] { 1, 0, 42, 41, 1, 0, 38, 37 },
		new byte[] { 9, 8, 42, 41, 1, 0, 0, 1 },
		new byte[] { 1, 0, 0, 1, 5, 4, 38, 37 },
		new byte[] { 16, 26, 42, 0, 16, 22, 38, 0 },
		new byte[] { 24, 26, 42, 8, 16, 16, 0, 0 },
		new byte[] { 16, 16, 0, 0, 20, 22, 38, 4 }
	}, 
	new byte[][] { // lod 35 (100011)
	}, 
	new byte[][] { // lod 36 (100100)
		new byte[] { 8, 0, 38, 42, 8, 0, 37, 41 },
		new byte[] { 10, 2, 38, 42, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 9, 1, 37, 41 },
		new byte[] { 16, 22, 38, 0, 16, 21, 37, 0 },
		new byte[] { 18, 22, 38, 2, 16, 16, 0, 0 },
		new byte[] { 16, 16, 0, 0, 17, 21, 37, 1 }
	}, 
	new byte[][] { // lod 37 (100101)
		new byte[] { 18, 2, 0, 16, 22, 38, 37, 21 },
		new byte[] { 24, 8, 41, 25, 16, 0, 37, 21 },
		new byte[] { 10, 42, 41, 8, 2, 38, 37, 0 }
	}, 
	new byte[][] { // lod 38 (100110)
		new byte[] { 17, 16, 0, 1, 21, 22, 38, 37 },
		new byte[] { 9, 8, 42, 41, 1, 0, 38, 37 },
		new byte[] { 24, 26, 42, 8, 16, 22, 38, 0 }
	}, 
	new byte[][] { // lod 39 (100111)
	}, 
	new byte[][] { // lod 40 (101000)
		new byte[] { 16, 0, 42, 26, 16, 0, 41, 25 },
		new byte[] { 18, 2, 42, 26, 16, 0, 0, 16 },
		new byte[] { 16, 0, 0, 16, 17, 1, 41, 25 },
		new byte[] { 4, 38, 42, 0, 4, 37, 41, 0 },
		new byte[] { 6, 38, 42, 2, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 5, 37, 41, 1 }
	}, 
	new byte[][] { // lod 41 (101001)
		new byte[] { 20, 4, 0, 16, 21, 37, 41, 25 },
		new byte[] { 18, 2, 42, 26, 16, 0, 41, 25 },
		new byte[] { 6, 38, 42, 2, 4, 37, 41, 0 }
	}, 
	new byte[][] { // lod 42 (101010)
		new byte[] { 5, 4, 0, 1, 37, 38, 42, 41 },
		new byte[] { 17, 16, 26, 25, 1, 0, 42, 41 },
		new byte[] { 20, 22, 26, 16, 4, 38, 42, 0 }
	}, 
	new byte[][] { // lod 43 (101011)
	}, 
	new byte[][] { // lod 44 (101100)
	}, 
	new byte[][] { // lod 45 (101101)
	}, 
	new byte[][] { // lod 46 (101110)
	}, 
	new byte[][] { // lod 47 (101111)
	}, 
	new byte[][] { // lod 48 (110000)
	}, 
	new byte[][] { // lod 49 (110001)
	}, 
	new byte[][] { // lod 50 (110010)
	}, 
	new byte[][] { // lod 51 (110011)
	}, 
	new byte[][] { // lod 52 (110100)
	}, 
	new byte[][] { // lod 53 (110101)
	}, 
	new byte[][] { // lod 54 (110110)
	}, 
	new byte[][] { // lod 55 (110111)
	}, 
	new byte[][] { // lod 56 (111000)
	}, 
	new byte[][] { // lod 57 (111001)
	}, 
	new byte[][] { // lod 58 (111010)
	}, 
	new byte[][] { // lod 59 (111011)
	}, 
	new byte[][] { // lod 60 (111100)
	}, 
	new byte[][] { // lod 61 (111101)
	}, 
	new byte[][] { // lod 62 (111110)
	}, 
	new byte[][] { // lod 63 (111111)
	}
};

// dim0:lod  |  dim1:edge#
// result: integer
// b0 = edge 1 | b1 = edge 2 | b4 = reuse index | b3 = reuse cell (if ) 

// binary is normally read right to left but here it's left to right
// new: 6 bits = edge1 | 6 bits = edge 2 | 4 bits = reuse offset | 6 bits = reuse index A | 6 bits = reuse index B | 4 bits left over
public static int[][] MCLodUniqueEdgesReuse = new int[][] {
	// old: 0000 0010 0000 0101 0001 0100 0001 0101
	// b0 (edge1) = 0001 0101 = 21
	// b1 (edge2) = 0001 0100 = 20
	// b2 (reuse index) = 0000 0101 = 5
	// b3 (reuse cell) = 0000 0010

	// new: uuuu inde x2in dex1 corn edge e2ed gee1
	// new: 0000 0001 0101 1111 0110 0101 0001 0101
	// console reading: EdgeA: 21, EdgeB20, ReuseCell: 4, ReuseIndex: 6, AlternateReuseIndex: 4
	// bits0-5 (edge1) = 01 0101 = 21
	// bits6-11 (edge2) = 0101 00 = 20
	// bits12-15 (reuse offset) = 0110 = 4
	// bits16-21 (reuse index 1) = 01 1111 = 31
	// bits22-27 (reuse index 2) = 0001 01 = 5
	
	new int[] { // lod 0 (0)
		0x015F6515, 0x000A4114, 0x000B4144, 0x01935545, 0x00252411, 0x00000010, 0x00000040, 0x00181441, 
		0x08143455, 0x00242414, 0x00000004, 0x00171045, 0x011E6594, 0x00034196, 0x00094106, 0x00232490, 
		0x00000092, 0x00000002, 0x00112496, 0x00000086, 0x00024986, 0x00014926, 0x00084124, 0x00000882, 
		0x00000822, 0x00000020, 0x000008A6, 0x00000824, 0x00004964, 0x01D25165, 0x00000860, 0x00161061, 
		0x00111865, 0x00002619, 0x00000218, 0x00000248, 0x00031649, 0x08553651, 0x00222610, 0x00000200, 
		0x00191241, 0x00012698, 0x0000029A, 0x0000020A, 0x00102692, 0x00000282, 0x00000A8A, 0x00000A2A, 
		0x00000228, 0x00000AA2, 0x00000A20, 0x00000A68, 0x00021269, 0x00101A61
	}, 
	new int[] { // lod 1 (1)
		0x00000640, 0x00000219, 0x00000008, 0x00262650, 0x00002619, 0x00222418, 0x00000400, 
		0x00000608, 0x000F4544, 0x00000015, 0x00000100, 0x015F6554, 0x00292415, 0x00242510, 
		0x000A4504, 0x00000A60, 0x00000A29, 0x00000828, 0x00000A40, 0x00000229, 0x00000020, 
		0x00000228, 0x00004964, 0x00000825, 0x00000920, 0x000C4944, 0x00000025, 0x00084124, 0x00322655, 0x00000A65, 0x002D4565, 0x00000669, 
	}, 
	new int[] { // lod 2 (10)
		0x00000A80, 0x0000022A, 0x00000008, 0x00000AA0, 0x00000A2A, 0x00000828, 0x00000800, 
		0x00000A08, 0x000D4984, 0x00000026, 0x00000100, 0x000149A4, 0x00000826, 0x00000920, 
		0x00084904, 0x00272690, 0x0001261A, 0x00222418, 0x00000680, 0x0000021A, 0x00000010, 
		0x00000218, 0x011E6594, 0x00282416, 0x00242510, 0x000E4584, 0x00000016, 0x000A4114, 0x00000AA6, 0x002E2696, 0x002B4996, 0x00000A9A, 
	}, 
	new int[] { // lod 3 (11)

	}, 
	new int[] { // lod 4 (100)
		0x00000980, 0x000000A6, 0x00000002, 0x000009A0, 0x000008A6, 0x00000822, 0x00000800, 
		0x00000882, 0x001B1941, 0x00000025, 0x00000040, 0x00111961, 0x00000825, 0x00000860, 
		0x00161841, 0x00282590, 0x00112496, 0x00232412, 0x00000580, 0x00000096, 0x00000010, 
		0x00000092, 0x08143551, 0x00292415, 0x00252450, 0x001C1541, 0x00000015, 0x00181051, 0x000009A5, 0x00312595, 0x002F1955, 0x00000996, 
	}, 
	new int[] { // lod 5 (101)
		0x00000002, 0x00000540, 0x00312595, 0x00000096, 0x00000940, 0x000009A5, 0x000000A6, 0x00000955, 0x00000996, 0x00232412, 0x00292550, 0x00112496, 0x00000092, 0x00000010, 
		0x00000822, 0x00000960, 0x000008A6, 0x00000882, 0x00000800, 0x00000648, 0x00322559, 0x00000200, 
		0x00000A48, 0x00000969, 0x00000A59, 0x00002658, 0x00222610, 0x00000218, 0x00000A68, 
		0x00000A20, 0x00000A08
	}, 
	new int[] { // lod 6 (110)
		0x00000008, 0x00000580, 0x002E2696, 0x0000021A, 0x00000980, 0x00000AA6, 0x0000022A, 0x00000996, 0x00000A9A, 0x00222418, 0x00282590, 0x0001261A, 0x00000218, 0x00000010, 
		0x00000828, 0x000009A0, 0x00000A2A, 0x00000A08, 0x00000800, 0x001C1541, 0x00312595, 0x00000040, 
		0x001B1941, 0x000009A5, 0x002F1955, 0x08143551, 0x00252450, 0x00181051, 0x00111961, 
		0x00000860, 0x00161841
	}, 
	new int[] { // lod 7 (111)

	}, 
	new int[] { // lod 8 (1000)
		0x00000A40, 0x001A1069, 0x00000001, 0x00000A60, 0x00101869, 0x00000821, 0x00000800, 
		0x00161841, 0x00000A82, 0x0000002A, 0x00000080, 0x00000AA2, 0x0000082A, 0x000008A0, 
		0x00000882, 0x00262650, 0x08553459, 0x00252411, 0x00000640, 0x001D1059, 0x00000010, 
		0x00181051, 0x00102692, 0x0027241A, 0x00232490, 0x00000682, 0x0000001A, 0x00000092, 0x00000A6A, 0x002A265A, 0x00000A9A, 0x002B1A59, 
	}, 
	new int[] { // lod 9 (1001)
		0x00000002, 0x00000A40, 0x00000AA9, 0x000000AA, 0x00000640, 0x002A2699, 0x0000009A, 0x00000669, 0x000006AA, 0x00000822, 0x00000A60, 0x000008AA, 0x000000A2, 0x00000020, 
		0x00232412, 0x00262650, 0x0010249A, 0x00000482, 0x00000400, 0x000C4944, 0x00000A65, 0x00000100, 
		0x000F4544, 0x00322655, 0x002D4565, 0x00004964, 0x00000920, 0x00084124, 0x015F6554, 
		0x00242510, 0x000A4504
	}, 
	new int[] { // lod 10 (1010)
		0x00000001, 0x00000680, 0x002A265A, 0x001D1059, 0x00000A80, 0x00000A6A, 0x001A1069, 0x00000A9A, 0x002B1A59, 0x00252411, 0x00272690, 0x08553459, 0x00181051, 0x00000010, 
		0x00000821, 0x00000AA0, 0x00101869, 0x00161841, 0x00000800, 0x000E4584, 0x002E2696, 0x00000100, 
		0x000D4984, 0x00000AA6, 0x002B4996, 0x011E6594, 0x00242510, 0x000A4114, 0x000149A4, 
		0x00000920, 0x00084904
	}, 
	new int[] { // lod 11 (1011)

	}, 
	new int[] { // lod 12 (1100)

	}, 
	new int[] { // lod 13 (1101)

	}, 
	new int[] { // lod 14 (1110)

	}, 
	new int[] { // lod 15 (1111)

	}, 
	new int[] { // lod 16 (10000)
		0x00000680, 0x0000021A, 0x00000008, 0x00000682, 0x0000029A, 0x0000008A, 0x00000080, 
		0x00000288, 0x000E4584, 0x00000016, 0x00000100, 0x00034586, 0x00000096, 0x00000182, 
		0x00094184, 0x001D1641, 0x00031259, 0x00191049, 0x00000640, 0x00000219, 0x00000001, 
		0x00000209, 0x01935545, 0x001C1055, 0x00171141, 0x000F4544, 0x00000015, 0x000B4105, 0x00000696, 0x00301655, 0x002C4595, 0x00000699, 
	}, 
	new int[] { // lod 17 (10001)
		0x00000002, 0x00000640, 0x00000699, 0x0000009A, 0x00000540, 0x002C4595, 0x00000096, 0x00000559, 0x0000059A, 0x0000020A, 0x00000648, 0x0000029A, 0x0000008A, 0x00000008, 
		0x00094106, 0x000F4544, 0x00034196, 0x00000182, 0x00000100, 0x00000A60, 0x00000669, 0x00000800, 
		0x00000960, 0x002D4565, 0x00000969, 0x00000A68, 0x00000A08, 0x00000828, 0x00004964, 
		0x00084904, 0x00000920
	}, 
	new int[] { // lod 18 (10010)
		0x00000020, 0x00000680, 0x00000A9A, 0x0000082A, 0x00000580, 0x002B4996, 0x00000826, 0x0000059A, 0x000009AA, 0x00000228, 0x00000688, 0x00000A2A, 0x00000828, 0x00000008, 
		0x00084124, 0x000E4584, 0x00014926, 0x00000920, 0x00000100, 0x001D1641, 0x00000699, 0x00000040, 
		0x001C1541, 0x002C4595, 0x00301559, 0x00031649, 0x00000248, 0x00191049, 0x01935545, 
		0x000B4144, 0x00171141
	}, 
	new int[] { // lod 19 (10011)

	}, 
	new int[] { // lod 20 (10100)
		0x00000008, 0x00000540, 0x00301655, 0x00000219, 0x00000580, 0x00000696, 0x0000021A, 0x00000595, 0x00000699, 0x00191049, 0x001C1541, 0x00031259, 0x00000209, 0x00000001, 
		0x0000008A, 0x00000582, 0x0000029A, 0x00000288, 0x00000080, 0x00000960, 0x002F1565, 0x00000800, 
		0x000009A0, 0x000005A6, 0x000009A5, 0x00111961, 0x00161841, 0x00000821, 0x000009A2, 
		0x00000882, 0x000008A0
	}, 
	new int[] { // lod 21 (10101)
		0x00000822, 0x00000020, 0x00000080, 0x00000882, 0x00000966, 0x00000565, 0x00000595, 0x00000996, 
		0x000009A2, 0x00000960, 0x00000540, 0x00000582, 0x0000020A, 0x00000648, 0x00000699, 0x0000029A, 
		0x0000008A, 0x00000008, 0x00000559, 0x0000059A, 0x00000A68, 0x00000669, 0x00000A08, 0x00000828, 0x00000969
	}, 
	new int[] { // lod 22 (10110)
		0x00161061, 0x00000001, 0x00000800, 0x00000860, 0x002F1565, 0x00000595, 0x00000996, 0x00000966, 
		0x00111961, 0x001C1541, 0x00000580, 0x000009A0, 0x00000228, 0x00000688, 0x00000A9A, 0x00000A2A, 
		0x00000828, 0x00000008, 0x0000059A, 0x000009AA, 0x00031649, 0x00000699, 0x00000248, 0x00191049, 0x00301559
	}, 
	new int[] { // lod 23 (10111)

	}, 
	new int[] { // lod 24 (11000)
		0x00000020, 0x00000640, 0x002B1A59, 0x00000829, 0x00000680, 0x00000A9A, 0x0000082A, 0x00000699, 0x00000AA9, 0x00161061, 0x001D1641, 0x00101869, 0x00000821, 0x00000001, 
		0x000000A2, 0x00000682, 0x000008AA, 0x000008A0, 0x00000080, 0x000F4544, 0x00301655, 0x00000100, 
		0x000E4584, 0x00000696, 0x002C4595, 0x01935545, 0x00171141, 0x000B4105, 0x00034586, 
		0x00000182, 0x00094184
	}, 
	new int[] { // lod 25 (11001)
		0x00094106, 0x00000004, 0x00000080, 0x00000182, 0x002C4556, 0x00000655, 0x00000699, 0x0000059A, 
		0x00034586, 0x000F4544, 0x00000640, 0x00000682, 0x00000822, 0x00000A60, 0x00000AA9, 0x000008AA, 
		0x000000A2, 0x00000020, 0x00000669, 0x000006AA, 0x00004964, 0x00000A65, 0x00000920, 0x00084124, 0x002D4565
	}, 
	new int[] { // lod 26 (11010)
		0x00084124, 0x00000004, 0x00000800, 0x00000920, 0x002B45A6, 0x00000696, 0x00000A9A, 0x000009AA, 
		0x000149A4, 0x000E4584, 0x00000680, 0x00000AA0, 0x00161061, 0x001D1641, 0x002B1A59, 0x00101869, 
		0x00000821, 0x00000001, 0x00000699, 0x00000AA9, 0x01935545, 0x00301655, 0x00171141, 0x000B4105, 0x002C4595
	}, 
	new int[] { // lod 27 (11011)

	}, 
	new int[] { // lod 28 (11100)

	}, 
	new int[] { // lod 29 (11101)

	}, 
	new int[] { // lod 30 (11110)

	}, 
	new int[] { // lod 31 (11111)

	}, 
	new int[] { // lod 32 (100000)
		0x00000A40, 0x00000229, 0x00000008, 0x001A1A41, 0x00021269, 0x00191049, 0x00000040, 
		0x00000248, 0x000C4944, 0x00000025, 0x00000100, 0x01D25945, 0x001B1065, 0x00171141, 
		0x000B4144, 0x00000A82, 0x000002AA, 0x0000008A, 0x00000A80, 0x0000022A, 0x00000002, 
		0x0000020A, 0x00024986, 0x000000A6, 0x00000182, 0x000D4984, 0x00000026, 0x00094106, 0x002E1A65, 0x00000AA6, 0x002A4966, 0x00000A6A, 
	}, 
	new int[] { // lod 33 (100001)
		0x00000010, 0x00000A40, 0x00000669, 0x00262419, 0x00000940, 0x002D4565, 0x00292415, 0x00000969, 0x00322559, 0x00000218, 0x00000A48, 0x00002619, 0x00222418, 0x00000008, 
		0x000A4114, 0x000C4944, 0x015F6515, 0x00242510, 0x00000100, 0x00000A82, 0x00000A6A, 0x00000080, 
		0x00000982, 0x002A4966, 0x000009AA, 0x00000A8A, 0x00000288, 0x0000008A, 0x00024986, 
		0x00094184, 0x00000182
	}, 
	new int[] { // lod 34 (100010)
		0x00000001, 0x00000A80, 0x00000A6A, 0x001A1069, 0x00000980, 0x002A4966, 0x001B1065, 0x000009AA, 0x002E1969, 0x00000209, 0x00000A88, 0x00021269, 0x00191049, 0x00000008, 
		0x000B4105, 0x000D4984, 0x01D25165, 0x00171141, 0x00000100, 0x00272690, 0x00000A9A, 0x00000400, 
		0x00282590, 0x002B4996, 0x002E259A, 0x00012698, 0x00000608, 0x00222418, 0x011E6594, 
		0x000A4504, 0x00242510
	}, 
	new int[] { // lod 35 (100011)

	}, 
	new int[] { // lod 36 (100100)
		0x00000008, 0x00000980, 0x00000AA6, 0x0000022A, 0x00000940, 0x002E1A65, 0x00000229, 0x00000966, 0x00000A6A, 0x0000008A, 0x00000982, 0x000002AA, 0x0000020A, 0x00000002, 
		0x00191049, 0x001B1941, 0x00021269, 0x00000248, 0x00000040, 0x00282590, 0x00000996, 0x00000400, 
		0x00292550, 0x002F1955, 0x00312556, 0x00112592, 0x00000482, 0x00232412, 0x08143551, 
		0x00181441, 0x00252450
	}, 
	new int[] { // lod 37 (100101)
		0x00000092, 0x00000002, 0x00000400, 0x00232490, 0x00000996, 0x00000966, 0x00000565, 0x00312595, 
		0x00112592, 0x00000982, 0x00000940, 0x00292550, 0x00000218, 0x00000A48, 0x00000669, 0x00002619, 
		0x00222418, 0x00000008, 0x00000969, 0x00322559, 0x00000A8A, 0x00000A6A, 0x00000288, 0x0000008A, 0x000009AA
	}, 
	new int[] { // lod 38 (100110)
		0x00252411, 0x00000010, 0x00000040, 0x00181441, 0x00312595, 0x00000996, 0x00000966, 0x002F1565, 
		0x08143551, 0x00282590, 0x00000980, 0x001B1941, 0x00000209, 0x00000A88, 0x00000A6A, 0x00021269, 
		0x00191049, 0x00000008, 0x000009AA, 0x002E1969, 0x00012698, 0x00000A9A, 0x00000608, 0x00222418, 0x002E259A
	}, 
	new int[] { // lod 39 (100111)

	}, 
	new int[] { // lod 40 (101000)
		0x00000010, 0x00000A80, 0x000006AA, 0x0027241A, 0x00000A40, 0x002B1669, 0x00262419, 0x00000A6A, 0x002A265A, 0x00000092, 0x00000A82, 0x0010249A, 0x00232412, 0x00000002, 
		0x00181051, 0x001A1A41, 0x08553459, 0x00252450, 0x00000040, 0x000D4984, 0x00000AA6, 0x00000100, 
		0x000C4944, 0x002E1A65, 0x002A4966, 0x00024986, 0x00000182, 0x00094106, 0x01D25945, 
		0x00171141, 0x000B4144
	}, 
	new int[] { // lod 41 (101001)
		0x000A4114, 0x00000004, 0x00000400, 0x00242510, 0x002D4955, 0x00000A65, 0x00000669, 0x00322559, 
		0x015F6554, 0x000C4944, 0x00000A40, 0x00262650, 0x00000092, 0x00000A82, 0x000006AA, 0x0010249A, 
		0x00232412, 0x00000002, 0x00000A6A, 0x002A265A, 0x00024986, 0x00000AA6, 0x00000182, 0x00094106, 0x002A4966
	}, 
	new int[] { // lod 42 (101010)
		0x000B4105, 0x00000004, 0x00000040, 0x00171141, 0x002A49A5, 0x00000AA6, 0x00000A6A, 0x002E1969, 
		0x01D25945, 0x000D4984, 0x00000A80, 0x001A1A41, 0x00252411, 0x00272690, 0x002A265A, 0x08553459, 
		0x00181051, 0x00000010, 0x00000A9A, 0x002B1A59, 0x011E6594, 0x002E2696, 0x00242510, 0x000A4114, 0x002B4996
	}, 
};

public static byte[][][] MCLodUniqueEdges = new byte[][][] {
	new byte[][] { // lod 0 (0)
		new byte[] { 21, 20 }, new byte[] { 20, 4 }, new byte[] { 4, 5 }, new byte[] { 5, 21 }, 
		new byte[] { 17, 16 }, new byte[] { 16, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 17 }, 
		new byte[] { 21, 17 }, new byte[] { 20, 16 }, new byte[] { 4, 0 }, new byte[] { 5, 1 }, 
		new byte[] { 20, 22 }, new byte[] { 22, 6 }, new byte[] { 6, 4 }, new byte[] { 16, 18 }, 
		new byte[] { 18, 2 }, new byte[] { 2, 0 }, new byte[] { 22, 18 }, new byte[] { 6, 2 }, 
		new byte[] { 6, 38 }, new byte[] { 38, 36 }, new byte[] { 36, 4 }, new byte[] { 2, 34 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 0 }, new byte[] { 38, 34 }, new byte[] { 36, 32 }, 
		new byte[] { 36, 37 }, new byte[] { 37, 5 }, new byte[] { 32, 33 }, new byte[] { 33, 1 }, 
		new byte[] { 37, 33 }, new byte[] { 25, 24 }, new byte[] { 24, 8 }, new byte[] { 8, 9 }, 
		new byte[] { 9, 25 }, new byte[] { 17, 25 }, new byte[] { 16, 24 }, new byte[] { 0, 8 }, 
		new byte[] { 1, 9 }, new byte[] { 24, 26 }, new byte[] { 26, 10 }, new byte[] { 10, 8 }, 
		new byte[] { 18, 26 }, new byte[] { 2, 10 }, new byte[] { 10, 42 }, new byte[] { 42, 40 }, 
		new byte[] { 40, 8 }, new byte[] { 34, 42 }, new byte[] { 32, 40 }, new byte[] { 40, 41 }, 
		new byte[] { 41, 9 }, new byte[] { 33, 41 }
	}, 
	new byte[][] { // lod 1 (1)
		new byte[] { 0, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 16, 25 }, new byte[] { 25, 24 }, new byte[] { 24, 16 }, new byte[] { 0, 16 }, 
		new byte[] { 8, 24 }, new byte[] { 4, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 20, 21 }, new byte[] { 21, 16 }, new byte[] { 16, 20 }, 
		new byte[] { 4, 20 }, new byte[] { 32, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 40 }, 
		new byte[] { 40, 32 }, new byte[] { 0, 41 }, new byte[] { 41, 8 }, new byte[] { 32, 0 }, 
		new byte[] { 40, 8 }, new byte[] { 36, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 32 }, 
		new byte[] { 32, 36 }, new byte[] { 4, 37 }, new byte[] { 37, 0 }, new byte[] { 36, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 25 }, new byte[] { 16, 16 }, new byte[] { 32, 32 }, 
		new byte[] { 37, 41 }, new byte[] { 4, 4 }, new byte[] { 37, 21 }, new byte[] { 41, 25 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 2 (10)
		new byte[] { 0, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 32, 42 }, new byte[] { 42, 40 }, new byte[] { 40, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 8, 40 }, new byte[] { 4, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 36, 38 }, new byte[] { 38, 32 }, new byte[] { 32, 36 }, 
		new byte[] { 4, 36 }, new byte[] { 16, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 24 }, 
		new byte[] { 24, 16 }, new byte[] { 0, 26 }, new byte[] { 26, 8 }, new byte[] { 16, 0 }, 
		new byte[] { 24, 8 }, new byte[] { 20, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 16 }, 
		new byte[] { 16, 20 }, new byte[] { 4, 22 }, new byte[] { 22, 0 }, new byte[] { 20, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 38, 42 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 22, 26 }, new byte[] { 4, 4 }, new byte[] { 22, 38 }, new byte[] { 26, 42 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 3 (11)
	}, 
	new byte[][] { // lod 4 (100)
		new byte[] { 0, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 2 }, new byte[] { 2, 0 }, 
		new byte[] { 32, 38 }, new byte[] { 38, 34 }, new byte[] { 34, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 2, 34 }, new byte[] { 1, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 0 }, 
		new byte[] { 0, 1 }, new byte[] { 33, 37 }, new byte[] { 37, 32 }, new byte[] { 32, 33 }, 
		new byte[] { 1, 33 }, new byte[] { 16, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 18 }, 
		new byte[] { 18, 16 }, new byte[] { 0, 22 }, new byte[] { 22, 2 }, new byte[] { 16, 0 }, 
		new byte[] { 18, 2 }, new byte[] { 17, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 16 }, 
		new byte[] { 16, 17 }, new byte[] { 1, 21 }, new byte[] { 21, 0 }, new byte[] { 17, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 37, 38 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 21, 22 }, new byte[] { 1, 1 }, new byte[] { 21, 37 }, new byte[] { 22, 38 }, 
		new byte[] { 2, 2 }
	}, 
	new byte[][] { // lod 5 (101)
		new byte[] { 2, 0 }, new byte[] { 0, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 2 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 38 }, new byte[] { 38, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 37 }, new byte[] { 22, 38 }, new byte[] { 18, 16 }, 
		new byte[] { 16, 21 }, new byte[] { 22, 18 }, new byte[] { 18, 2 }, new byte[] { 16, 0 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 37 }, new byte[] { 38, 34 }, new byte[] { 2, 34 }, 
		new byte[] { 0, 32 }, new byte[] { 8, 25 }, new byte[] { 25, 21 }, new byte[] { 0, 8 }, 
		new byte[] { 8, 41 }, new byte[] { 41, 37 }, new byte[] { 8, 8 }, new byte[] { 25, 41 }, 
		new byte[] { 24, 25 }, new byte[] { 16, 24 }, new byte[] { 24, 8 }, new byte[] { 40, 41 }, 
		new byte[] { 32, 40 }, new byte[] { 8, 40 }
	}, 
	new byte[][] { // lod 6 (110)
		new byte[] { 8, 0 }, new byte[] { 0, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 8 }, 
		new byte[] { 0, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 22, 38 }, new byte[] { 26, 42 }, new byte[] { 24, 16 }, 
		new byte[] { 16, 22 }, new byte[] { 26, 24 }, new byte[] { 24, 8 }, new byte[] { 16, 0 }, 
		new byte[] { 40, 32 }, new byte[] { 32, 38 }, new byte[] { 42, 40 }, new byte[] { 8, 40 }, 
		new byte[] { 0, 32 }, new byte[] { 1, 21 }, new byte[] { 21, 22 }, new byte[] { 0, 1 }, 
		new byte[] { 1, 37 }, new byte[] { 37, 38 }, new byte[] { 1, 1 }, new byte[] { 21, 37 }, 
		new byte[] { 17, 21 }, new byte[] { 16, 17 }, new byte[] { 17, 1 }, new byte[] { 33, 37 }, 
		new byte[] { 32, 33 }, new byte[] { 1, 33 }
	}, 
	new byte[][] { // lod 7 (111)
	}, 
	new byte[][] { // lod 8 (1000)
		new byte[] { 0, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 1 }, new byte[] { 1, 0 }, 
		new byte[] { 32, 41 }, new byte[] { 41, 33 }, new byte[] { 33, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 1, 33 }, new byte[] { 2, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 0 }, 
		new byte[] { 0, 2 }, new byte[] { 34, 42 }, new byte[] { 42, 32 }, new byte[] { 32, 34 }, 
		new byte[] { 2, 34 }, new byte[] { 16, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 17 }, 
		new byte[] { 17, 16 }, new byte[] { 0, 25 }, new byte[] { 25, 1 }, new byte[] { 16, 0 }, 
		new byte[] { 17, 1 }, new byte[] { 18, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 16 }, 
		new byte[] { 16, 18 }, new byte[] { 2, 26 }, new byte[] { 26, 0 }, new byte[] { 18, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 41 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 26, 25 }, new byte[] { 2, 2 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, 
		new byte[] { 1, 1 }
	}, 
	new byte[][] { // lod 9 (1001)
		new byte[] { 2, 0 }, new byte[] { 0, 41 }, new byte[] { 41, 42 }, new byte[] { 42, 2 }, 
		new byte[] { 0, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 41, 25 }, new byte[] { 42, 26 }, new byte[] { 34, 32 }, 
		new byte[] { 32, 41 }, new byte[] { 42, 34 }, new byte[] { 34, 2 }, new byte[] { 32, 0 }, 
		new byte[] { 18, 16 }, new byte[] { 16, 25 }, new byte[] { 26, 18 }, new byte[] { 2, 18 }, 
		new byte[] { 0, 16 }, new byte[] { 4, 37 }, new byte[] { 37, 41 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 21 }, new byte[] { 21, 25 }, new byte[] { 4, 4 }, new byte[] { 37, 21 }, 
		new byte[] { 36, 37 }, new byte[] { 32, 36 }, new byte[] { 36, 4 }, new byte[] { 20, 21 }, 
		new byte[] { 16, 20 }, new byte[] { 4, 20 }
	}, 
	new byte[][] { // lod 10 (1010)
		new byte[] { 1, 0 }, new byte[] { 0, 26 }, new byte[] { 26, 25 }, new byte[] { 25, 1 }, 
		new byte[] { 0, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 1 }, new byte[] { 1, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, new byte[] { 17, 16 }, 
		new byte[] { 16, 26 }, new byte[] { 25, 17 }, new byte[] { 17, 1 }, new byte[] { 16, 0 }, 
		new byte[] { 33, 32 }, new byte[] { 32, 42 }, new byte[] { 41, 33 }, new byte[] { 1, 33 }, 
		new byte[] { 0, 32 }, new byte[] { 4, 22 }, new byte[] { 22, 26 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 38 }, new byte[] { 38, 42 }, new byte[] { 4, 4 }, new byte[] { 22, 38 }, 
		new byte[] { 20, 22 }, new byte[] { 16, 20 }, new byte[] { 20, 4 }, new byte[] { 36, 38 }, 
		new byte[] { 32, 36 }, new byte[] { 4, 36 }
	}, 
	new byte[][] { // lod 11 (1011)
	}, 
	new byte[][] { // lod 12 (1100)
	}, 
	new byte[][] { // lod 13 (1101)
	}, 
	new byte[][] { // lod 14 (1110)
	}, 
	new byte[][] { // lod 15 (1111)
	}, 
	new byte[][] { // lod 16 (10000)
		new byte[] { 0, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 2, 26 }, new byte[] { 26, 10 }, new byte[] { 10, 2 }, new byte[] { 0, 2 }, 
		new byte[] { 8, 10 }, new byte[] { 4, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 6, 22 }, new byte[] { 22, 2 }, new byte[] { 2, 6 }, 
		new byte[] { 4, 6 }, new byte[] { 1, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 9 }, 
		new byte[] { 9, 1 }, new byte[] { 0, 25 }, new byte[] { 25, 8 }, new byte[] { 1, 0 }, 
		new byte[] { 9, 8 }, new byte[] { 5, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 1 }, 
		new byte[] { 1, 5 }, new byte[] { 4, 21 }, new byte[] { 21, 0 }, new byte[] { 5, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 22, 26 }, new byte[] { 2, 2 }, new byte[] { 1, 1 }, 
		new byte[] { 21, 25 }, new byte[] { 4, 4 }, new byte[] { 21, 22 }, new byte[] { 25, 26 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 17 (10001)
		new byte[] { 2, 0 }, new byte[] { 0, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 2 }, 
		new byte[] { 0, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 25, 21 }, new byte[] { 26, 22 }, new byte[] { 10, 8 }, 
		new byte[] { 8, 25 }, new byte[] { 26, 10 }, new byte[] { 10, 2 }, new byte[] { 8, 0 }, 
		new byte[] { 6, 4 }, new byte[] { 4, 21 }, new byte[] { 22, 6 }, new byte[] { 2, 6 }, 
		new byte[] { 0, 4 }, new byte[] { 32, 41 }, new byte[] { 41, 25 }, new byte[] { 0, 32 }, 
		new byte[] { 32, 37 }, new byte[] { 37, 21 }, new byte[] { 32, 32 }, new byte[] { 41, 37 }, 
		new byte[] { 40, 41 }, new byte[] { 8, 40 }, new byte[] { 40, 32 }, new byte[] { 36, 37 }, 
		new byte[] { 4, 36 }, new byte[] { 32, 36 }
	}, 
	new byte[][] { // lod 18 (10010)
		new byte[] { 32, 0 }, new byte[] { 0, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 32 }, 
		new byte[] { 0, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 32 }, new byte[] { 32, 32 }, 
		new byte[] { 0, 0 }, new byte[] { 26, 22 }, new byte[] { 42, 38 }, new byte[] { 40, 8 }, 
		new byte[] { 8, 26 }, new byte[] { 42, 40 }, new byte[] { 40, 32 }, new byte[] { 8, 0 }, 
		new byte[] { 36, 4 }, new byte[] { 4, 22 }, new byte[] { 38, 36 }, new byte[] { 32, 36 }, 
		new byte[] { 0, 4 }, new byte[] { 1, 25 }, new byte[] { 25, 26 }, new byte[] { 0, 1 }, 
		new byte[] { 1, 21 }, new byte[] { 21, 22 }, new byte[] { 1, 1 }, new byte[] { 25, 21 }, 
		new byte[] { 9, 25 }, new byte[] { 8, 9 }, new byte[] { 9, 1 }, new byte[] { 5, 21 }, 
		new byte[] { 4, 5 }, new byte[] { 1, 5 }
	}, 
	new byte[][] { // lod 19 (10011)
	}, 
	new byte[][] { // lod 20 (10100)
		new byte[] { 8, 0 }, new byte[] { 0, 21 }, new byte[] { 21, 25 }, new byte[] { 25, 8 }, 
		new byte[] { 0, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 22 }, new byte[] { 25, 26 }, new byte[] { 9, 1 }, 
		new byte[] { 1, 21 }, new byte[] { 25, 9 }, new byte[] { 9, 8 }, new byte[] { 1, 0 }, 
		new byte[] { 10, 2 }, new byte[] { 2, 22 }, new byte[] { 26, 10 }, new byte[] { 8, 10 }, 
		new byte[] { 0, 2 }, new byte[] { 32, 37 }, new byte[] { 37, 21 }, new byte[] { 0, 32 }, 
		new byte[] { 32, 38 }, new byte[] { 38, 22 }, new byte[] { 32, 32 }, new byte[] { 37, 38 }, 
		new byte[] { 33, 37 }, new byte[] { 1, 33 }, new byte[] { 33, 32 }, new byte[] { 34, 38 }, 
		new byte[] { 2, 34 }, new byte[] { 32, 34 }
	}, 
	new byte[][] { // lod 21 (10101)
		new byte[] { 34, 32 }, new byte[] { 32, 0 }, new byte[] { 0, 2 }, new byte[] { 2, 34 }, 
		new byte[] { 38, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 38 }, 
		new byte[] { 34, 38 }, new byte[] { 32, 37 }, new byte[] { 0, 21 }, new byte[] { 2, 22 }, 
		new byte[] { 10, 8 }, new byte[] { 8, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 10 }, 
		new byte[] { 10, 2 }, new byte[] { 8, 0 }, new byte[] { 25, 21 }, new byte[] { 26, 22 }, 
		new byte[] { 40, 41 }, new byte[] { 41, 25 }, new byte[] { 8, 40 }, new byte[] { 40, 32 }, 
		new byte[] { 41, 37 }
	}, 
	new byte[][] { // lod 22 (10110)
		new byte[] { 33, 1 }, new byte[] { 1, 0 }, new byte[] { 0, 32 }, new byte[] { 32, 33 }, 
		new byte[] { 37, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 37 }, 
		new byte[] { 33, 37 }, new byte[] { 1, 21 }, new byte[] { 0, 22 }, new byte[] { 32, 38 }, 
		new byte[] { 40, 8 }, new byte[] { 8, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 40 }, 
		new byte[] { 40, 32 }, new byte[] { 8, 0 }, new byte[] { 26, 22 }, new byte[] { 42, 38 }, 
		new byte[] { 9, 25 }, new byte[] { 25, 26 }, new byte[] { 8, 9 }, new byte[] { 9, 1 }, 
		new byte[] { 25, 21 }
	}, 
	new byte[][] { // lod 23 (10111)
	}, 
	new byte[][] { // lod 24 (11000)
		new byte[] { 32, 0 }, new byte[] { 0, 25 }, new byte[] { 25, 41 }, new byte[] { 41, 32 }, 
		new byte[] { 0, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 32 }, new byte[] { 32, 32 }, 
		new byte[] { 0, 0 }, new byte[] { 25, 26 }, new byte[] { 41, 42 }, new byte[] { 33, 1 }, 
		new byte[] { 1, 25 }, new byte[] { 41, 33 }, new byte[] { 33, 32 }, new byte[] { 1, 0 }, 
		new byte[] { 34, 2 }, new byte[] { 2, 26 }, new byte[] { 42, 34 }, new byte[] { 32, 34 }, 
		new byte[] { 0, 2 }, new byte[] { 4, 21 }, new byte[] { 21, 25 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 22 }, new byte[] { 22, 26 }, new byte[] { 4, 4 }, new byte[] { 21, 22 }, 
		new byte[] { 5, 21 }, new byte[] { 1, 5 }, new byte[] { 5, 4 }, new byte[] { 6, 22 }, 
		new byte[] { 2, 6 }, new byte[] { 4, 6 }
	}, 
	new byte[][] { // lod 25 (11001)
		new byte[] { 6, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 2 }, new byte[] { 2, 6 }, 
		new byte[] { 22, 21 }, new byte[] { 21, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 22 }, 
		new byte[] { 6, 22 }, new byte[] { 4, 21 }, new byte[] { 0, 25 }, new byte[] { 2, 26 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 41 }, new byte[] { 41, 42 }, new byte[] { 42, 34 }, 
		new byte[] { 34, 2 }, new byte[] { 32, 0 }, new byte[] { 41, 25 }, new byte[] { 42, 26 }, 
		new byte[] { 36, 37 }, new byte[] { 37, 41 }, new byte[] { 32, 36 }, new byte[] { 36, 4 }, 
		new byte[] { 37, 21 }
	}, 
	new byte[][] { // lod 26 (11010)
		new byte[] { 36, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 32 }, new byte[] { 32, 36 }, 
		new byte[] { 38, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 38 }, 
		new byte[] { 36, 38 }, new byte[] { 4, 22 }, new byte[] { 0, 26 }, new byte[] { 32, 42 }, 
		new byte[] { 33, 1 }, new byte[] { 1, 25 }, new byte[] { 25, 41 }, new byte[] { 41, 33 }, 
		new byte[] { 33, 32 }, new byte[] { 1, 0 }, new byte[] { 25, 26 }, new byte[] { 41, 42 }, 
		new byte[] { 5, 21 }, new byte[] { 21, 25 }, new byte[] { 1, 5 }, new byte[] { 5, 4 }, 
		new byte[] { 21, 22 }
	}, 
	new byte[][] { // lod 27 (11011)
	}, 
	new byte[][] { // lod 28 (11100)
	}, 
	new byte[][] { // lod 29 (11101)
	}, 
	new byte[][] { // lod 30 (11110)
	}, 
	new byte[][] { // lod 31 (11111)
	}, 
	new byte[][] { // lod 32 (100000)
		new byte[] { 0, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 1, 41 }, new byte[] { 41, 9 }, new byte[] { 9, 1 }, new byte[] { 0, 1 }, 
		new byte[] { 8, 9 }, new byte[] { 4, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 5, 37 }, new byte[] { 37, 1 }, new byte[] { 1, 5 }, 
		new byte[] { 4, 5 }, new byte[] { 2, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 10 }, 
		new byte[] { 10, 2 }, new byte[] { 0, 42 }, new byte[] { 42, 8 }, new byte[] { 2, 0 }, 
		new byte[] { 10, 8 }, new byte[] { 6, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 2 }, 
		new byte[] { 2, 6 }, new byte[] { 4, 38 }, new byte[] { 38, 0 }, new byte[] { 6, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 37, 41 }, new byte[] { 1, 1 }, new byte[] { 2, 2 }, 
		new byte[] { 38, 42 }, new byte[] { 4, 4 }, new byte[] { 38, 37 }, new byte[] { 42, 41 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 33 (100001)
		new byte[] { 16, 0 }, new byte[] { 0, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 16 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 16 }, new byte[] { 16, 16 }, 
		new byte[] { 0, 0 }, new byte[] { 41, 37 }, new byte[] { 25, 21 }, new byte[] { 24, 8 }, 
		new byte[] { 8, 41 }, new byte[] { 25, 24 }, new byte[] { 24, 16 }, new byte[] { 8, 0 }, 
		new byte[] { 20, 4 }, new byte[] { 4, 37 }, new byte[] { 21, 20 }, new byte[] { 16, 20 }, 
		new byte[] { 0, 4 }, new byte[] { 2, 42 }, new byte[] { 42, 41 }, new byte[] { 0, 2 }, 
		new byte[] { 2, 38 }, new byte[] { 38, 37 }, new byte[] { 2, 2 }, new byte[] { 42, 38 }, 
		new byte[] { 10, 42 }, new byte[] { 8, 10 }, new byte[] { 10, 2 }, new byte[] { 6, 38 }, 
		new byte[] { 4, 6 }, new byte[] { 2, 6 }
	}, 
	new byte[][] { // lod 34 (100010)
		new byte[] { 1, 0 }, new byte[] { 0, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 1 }, 
		new byte[] { 0, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 1 }, new byte[] { 1, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 38 }, new byte[] { 41, 37 }, new byte[] { 9, 8 }, 
		new byte[] { 8, 42 }, new byte[] { 41, 9 }, new byte[] { 9, 1 }, new byte[] { 8, 0 }, 
		new byte[] { 5, 4 }, new byte[] { 4, 38 }, new byte[] { 37, 5 }, new byte[] { 1, 5 }, 
		new byte[] { 0, 4 }, new byte[] { 16, 26 }, new byte[] { 26, 42 }, new byte[] { 0, 16 }, 
		new byte[] { 16, 22 }, new byte[] { 22, 38 }, new byte[] { 16, 16 }, new byte[] { 26, 22 }, 
		new byte[] { 24, 26 }, new byte[] { 8, 24 }, new byte[] { 24, 16 }, new byte[] { 20, 22 }, 
		new byte[] { 4, 20 }, new byte[] { 16, 20 }
	}, 
	new byte[][] { // lod 35 (100011)
	}, 
	new byte[][] { // lod 36 (100100)
		new byte[] { 8, 0 }, new byte[] { 0, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 8 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 41 }, new byte[] { 41, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 38, 37 }, new byte[] { 42, 41 }, new byte[] { 10, 2 }, 
		new byte[] { 2, 38 }, new byte[] { 42, 10 }, new byte[] { 10, 8 }, new byte[] { 2, 0 }, 
		new byte[] { 9, 1 }, new byte[] { 1, 37 }, new byte[] { 41, 9 }, new byte[] { 8, 9 }, 
		new byte[] { 0, 1 }, new byte[] { 16, 22 }, new byte[] { 22, 38 }, new byte[] { 0, 16 }, 
		new byte[] { 16, 21 }, new byte[] { 21, 37 }, new byte[] { 16, 16 }, new byte[] { 22, 21 }, 
		new byte[] { 18, 22 }, new byte[] { 2, 18 }, new byte[] { 18, 16 }, new byte[] { 17, 21 }, 
		new byte[] { 1, 17 }, new byte[] { 16, 17 }
	}, 
	new byte[][] { // lod 37 (100101)
		new byte[] { 18, 2 }, new byte[] { 2, 0 }, new byte[] { 0, 16 }, new byte[] { 16, 18 }, 
		new byte[] { 22, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 22 }, 
		new byte[] { 18, 22 }, new byte[] { 2, 38 }, new byte[] { 0, 37 }, new byte[] { 16, 21 }, 
		new byte[] { 24, 8 }, new byte[] { 8, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 24 }, 
		new byte[] { 24, 16 }, new byte[] { 8, 0 }, new byte[] { 41, 37 }, new byte[] { 25, 21 }, 
		new byte[] { 10, 42 }, new byte[] { 42, 41 }, new byte[] { 8, 10 }, new byte[] { 10, 2 }, 
		new byte[] { 42, 38 }
	}, 
	new byte[][] { // lod 38 (100110)
		new byte[] { 17, 16 }, new byte[] { 16, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 17 }, 
		new byte[] { 21, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 21 }, 
		new byte[] { 17, 21 }, new byte[] { 16, 22 }, new byte[] { 0, 38 }, new byte[] { 1, 37 }, 
		new byte[] { 9, 8 }, new byte[] { 8, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 9 }, 
		new byte[] { 9, 1 }, new byte[] { 8, 0 }, new byte[] { 42, 38 }, new byte[] { 41, 37 }, 
		new byte[] { 24, 26 }, new byte[] { 26, 42 }, new byte[] { 8, 24 }, new byte[] { 24, 16 }, 
		new byte[] { 26, 22 }
	}, 
	new byte[][] { // lod 39 (100111)
	}, 
	new byte[][] { // lod 40 (101000)
		new byte[] { 16, 0 }, new byte[] { 0, 42 }, new byte[] { 42, 26 }, new byte[] { 26, 16 }, 
		new byte[] { 0, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 16 }, new byte[] { 16, 16 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 41 }, new byte[] { 26, 25 }, new byte[] { 18, 2 }, 
		new byte[] { 2, 42 }, new byte[] { 26, 18 }, new byte[] { 18, 16 }, new byte[] { 2, 0 }, 
		new byte[] { 17, 1 }, new byte[] { 1, 41 }, new byte[] { 25, 17 }, new byte[] { 16, 17 }, 
		new byte[] { 0, 1 }, new byte[] { 4, 38 }, new byte[] { 38, 42 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 37 }, new byte[] { 37, 41 }, new byte[] { 4, 4 }, new byte[] { 38, 37 }, 
		new byte[] { 6, 38 }, new byte[] { 2, 6 }, new byte[] { 6, 4 }, new byte[] { 5, 37 }, 
		new byte[] { 1, 5 }, new byte[] { 4, 5 }
	}, 
	new byte[][] { // lod 41 (101001)
		new byte[] { 20, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 16 }, new byte[] { 16, 20 }, 
		new byte[] { 21, 37 }, new byte[] { 37, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 21 }, 
		new byte[] { 20, 21 }, new byte[] { 4, 37 }, new byte[] { 0, 41 }, new byte[] { 16, 25 }, 
		new byte[] { 18, 2 }, new byte[] { 2, 42 }, new byte[] { 42, 26 }, new byte[] { 26, 18 }, 
		new byte[] { 18, 16 }, new byte[] { 2, 0 }, new byte[] { 42, 41 }, new byte[] { 26, 25 }, 
		new byte[] { 6, 38 }, new byte[] { 38, 42 }, new byte[] { 2, 6 }, new byte[] { 6, 4 }, 
		new byte[] { 38, 37 }
	}, 
	new byte[][] { // lod 42 (101010)
		new byte[] { 5, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 5 }, 
		new byte[] { 37, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 37 }, 
		new byte[] { 5, 37 }, new byte[] { 4, 38 }, new byte[] { 0, 42 }, new byte[] { 1, 41 }, 
		new byte[] { 17, 16 }, new byte[] { 16, 26 }, new byte[] { 26, 25 }, new byte[] { 25, 17 }, 
		new byte[] { 17, 1 }, new byte[] { 16, 0 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, 
		new byte[] { 20, 22 }, new byte[] { 22, 26 }, new byte[] { 16, 20 }, new byte[] { 20, 4 }, 
		new byte[] { 22, 38 }
	}, 
	new byte[][] { // lod 43 (101011)
	}, 
	new byte[][] { // lod 44 (101100)
	}, 
	new byte[][] { // lod 45 (101101)
	}, 
	new byte[][] { // lod 46 (101110)
	}, 
	new byte[][] { // lod 47 (101111)
	}, 
	new byte[][] { // lod 48 (110000)
	}, 
	new byte[][] { // lod 49 (110001)
	}, 
	new byte[][] { // lod 50 (110010)
	}, 
	new byte[][] { // lod 51 (110011)
	}, 
	new byte[][] { // lod 52 (110100)
	}, 
	new byte[][] { // lod 53 (110101)
	}, 
	new byte[][] { // lod 54 (110110)
	}, 
	new byte[][] { // lod 55 (110111)
	}, 
	new byte[][] { // lod 56 (111000)
	}, 
	new byte[][] { // lod 57 (111001)
	}, 
	new byte[][] { // lod 58 (111010)
	}, 
	new byte[][] { // lod 59 (111011)
	}, 
	new byte[][] { // lod 60 (111100)
	}, 
	new byte[][] { // lod 61 (111101)
	}, 
	new byte[][] { // lod 62 (111110)
	}, 
};

// dim0: lod  |  dim1:gridcell#  |  dim2: edge#
// result: edge id#
public static byte[][,] MCLodEdgeMappingTable = new byte[][,] {
	new byte[8,12] { // lod 0 (0)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 1, 15, 16, 17, 5, 9, 18, 19, 10 },
		{14, 20, 21, 22, 17, 23, 24, 25, 10, 19, 26, 27 },
		{2, 22, 28, 29, 6, 25, 30, 31, 11, 10, 27, 32 },
		{4, 5, 6, 7, 33, 34, 35, 36, 37, 38, 39, 40 },
		{15, 16, 17, 5, 41, 42, 43, 34, 38, 44, 45, 39 },
		{17, 23, 24, 25, 43, 46, 47, 48, 39, 45, 49, 50 },
		{6, 25, 30, 31, 35, 48, 51, 52, 40, 39, 50, 53 }
	},
	new byte[9,12] { // lod 1 (1)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[9,12] { // lod 2 (10)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[0,12] { // lod 3 (11)
	},
	new byte[9,12] { // lod 4 (100)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 5 (101)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 6 (110)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 7 (111)
	},
	new byte[9,12] { // lod 8 (1000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 9 (1001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 10 (1010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 11 (1011)
	},
	new byte[0,12] { // lod 12 (1100)
	},
	new byte[0,12] { // lod 13 (1101)
	},
	new byte[0,12] { // lod 14 (1110)
	},
	new byte[0,12] { // lod 15 (1111)
	},
	new byte[9,12] { // lod 16 (10000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 17 (10001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 18 (10010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 19 (10011)
	},
	new byte[6,12] { // lod 20 (10100)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 21 (10101)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 22 (10110)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 23 (10111)
	},
	new byte[6,12] { // lod 24 (11000)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 25 (11001)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 26 (11010)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 27 (11011)
	},
	new byte[0,12] { // lod 28 (11100)
	},
	new byte[0,12] { // lod 29 (11101)
	},
	new byte[0,12] { // lod 30 (11110)
	},
	new byte[0,12] { // lod 31 (11111)
	},
	new byte[9,12] { // lod 32 (100000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 33 (100001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 34 (100010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 35 (100011)
	},
	new byte[6,12] { // lod 36 (100100)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 37 (100101)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 38 (100110)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 39 (100111)
	},
	new byte[6,12] { // lod 40 (101000)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 41 (101001)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 42 (101010)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 43 (101011)
	},
	new byte[0,12] { // lod 44 (101100)
	},
	new byte[0,12] { // lod 45 (101101)
	},
	new byte[0,12] { // lod 46 (101110)
	},
	new byte[0,12] { // lod 47 (101111)
	},
	new byte[0,12] { // lod 48 (110000)
	},
	new byte[0,12] { // lod 49 (110001)
	},
	new byte[0,12] { // lod 50 (110010)
	},
	new byte[0,12] { // lod 51 (110011)
	},
	new byte[0,12] { // lod 52 (110100)
	},
	new byte[0,12] { // lod 53 (110101)
	},
	new byte[0,12] { // lod 54 (110110)
	},
	new byte[0,12] { // lod 55 (110111)
	},
	new byte[0,12] { // lod 56 (111000)
	},
	new byte[0,12] { // lod 57 (111001)
	},
	new byte[0,12] { // lod 58 (111010)
	},
	new byte[0,12] { // lod 59 (111011)
	},
	new byte[0,12] { // lod 60 (111100)
	},
	new byte[0,12] { // lod 61 (111101)
	},
	new byte[0,12] { // lod 62 (111110)
	},
	new byte[0,12] { // lod 63 (111111)
	}
};

public static int[,,] MCLodMaximalEdges = {

	// +y face
	{{-1, 1, 1}, {0, 1, 1}}, {{0, 1, 1}, {1, 1, 1}}, // 0, 1
	{{1, 1, 1}, {1, 1, 0}}, {{1, 1, 0}, {1, 1, - 1}}, // 2, 3
	{{1, 1, -1}, {0, 1, -1}}, {{0, 1, -1}, {-1, 1, -1}}, // 4, 5
	{{-1, 1, -1}, {-1, 1, 0}}, {{-1, 1, 0}, {-1, 1, 1}}, // 6, 7
	{{0, 1, 1}, {0, 1, 0}}, {{1, 1, 0}, {0, 1, 0}}, // 8, 9
	{{0, 1, -1}, {0, 1, 0}}, {{-1, 1, 0}, {0, 1, 0}}, // 10, 11
	{{-1, 1, 1}, {0, 1, 0}}, {{1, 1, 1}, {0, 1, 0}}, // 12, 13
	{{1, 1, -1}, {0, 1, 0}}, {{-1, 1, -1}, {0, 1, 0}}, // 14, 15

	// +x face
	{{1, 1, 1}, {1, 0, 1}}, {{1, 0, 1}, {1, -1, 1}}, // 16, 17
	{{1, -1, 1}, {1, -1, 0}}, {{1, -1, 0}, {1, -1, -1}}, // 18, 19
	{{1, -1, -1}, {1, 0, -1}}, {{1, 0, -1}, {1, 1, -1}}, // 20, 21
	{{1, 0, 1}, {1, 0, 0}}, {{1, -1, 0}, {1, 0, 0}}, // 22, 23
	{{1, 0, -1}, {1, 0, 0}}, {{1, 1, 0}, {1, 0, 0}}, // 24, 25
	{{1, 1, 1}, {1, 0, 0}}, {{1, -1, 1}, {1, 0, 0}}, // 26, 27
	{{1, -1, -1}, {1, 0, 0}}, {{1, 1, -1}, {1, 0, 0}}, // 28, 29

	// +z face
	{{1, -1, 1}, {0, -1, 1}}, {{0, -1, 1}, {-1, -1, 1}}, // 30, 31
	{{-1, -1, 1}, {-1, 0, 1}}, {{-1, 0, 1}, {-1, 1, 1}}, // 32, 33
	{{0, 1, 1}, {0, 0, 1}}, {{1, 0, 1}, {0, 0, 1}}, // 34, 35
	{{0, 0, 1}, {0, -1, 1}}, {{-1, 0, 1}, {0, 0, 1}}, // 36, 37
	{{-1, 1, 1}, {0, 0, 1}}, {{1, 1, 1}, {0, 0, 1}}, // 38, 39
	{{1, -1, 1}, {0, 0, 1}}, {{-1, -1, 1}, {0, 0, 1}}, // 40, 41

	// sides
	{{-1, 1, 1}, {1, 1, 1}}, {{1, 1, 1}, {1, 1, -1}}, // 42, 43
	{{1, 1, -1}, {-1, 1, -1}}, {{-1, 1, -1}, {-1, 1, 1}}, // 44, 45
	{{1, 1, 1}, {1, -1, 1}}, {{1, -1, 1}, {1, -1, -1}}, // 46, 47
	{{1, -1, -1}, {1, 1, -1}}, // 48
	{{1, -1, 1}, {-1, -1, 1}}, {{-1, -1, 1}, {-1, 1, 1}} // 49, 50
};

//dim0: lod   |  {edgeNum, reusableEdgeNumber}
public static byte[][,] MCLodEdgeToReID = new byte[][,] {
	new byte[,] {
		{13, 19},
		{16, 24},
		{18, 20},
		{19, 23},
		{20, 18},
		{21, 30},
		{23, 22},
		{24, 35},
		{26, 17},
		{27, 36},
		{28, 31},
		{30, 37},
		{32, 32},
		{33, 5},
		{34, 10},
		{35, 11},
		{36, 6},
		{41, 4},
		{42, 3},
		{43, 9},
		{44, 21},
		{45, 25},
		{46, 2},
		{47, 1},
		{48, 8},
		{49, 16},
		{50, 34},
		{51, 0},
		{52, 7},
		{53, 33}
	},
	new byte[,] {
		{2, 15},
		{5, 5},
		{8, 10},
		{17, 38},
		{19, 0},
		{20, 34},
		{22, 12},
		{24, 8},
		{25, 31},
		{27, 41},
		{28, 36},
		{36, 50},
		{39, 45}
	},
	new byte[,] {
		{2, 13},
		{4, 39},
		{5, 1},
		{6, 34},
		{8, 8},
		{13, 30},
		{14, 40},
		{15, 36},
		{19, 4},
		{22, 14},
		{24, 10},
		{33, 46},
		{36, 48},
		{38, 47},
		{39, 43}
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 27},
		{4, 40},
		{5, 17},
		{6, 35},
		{8, 22},
		{13, 32},
		{14, 41},
		{15, 37},
		{19, 20},
		{22, 28},
		{24, 24},
		{33, 49},
		{39, 47}
	},
	new byte[,] {
		{3, 28},
		{5, 49},
		{6, 27},
		{10, 47},
		{13, 20},
		{14, 24},
		{16, 35},
		{17, 41},
		{18, 17},
		{19, 22},
		{21, 15},
		{24, 12},
		{25, 50},
		{27, 45},
		{28, 5},
		{30, 10},
		{31, 0},
		{32, 34},
		{33, 8}
	},
	new byte[,] {
		{2, 48},
		{3, 14},
		{5, 46},
		{6, 13},
		{9, 47},
		{10, 43},
		{13, 4},
		{14, 10},
		{16, 34},
		{17, 40},
		{18, 1},
		{19, 8},
		{25, 49},
		{31, 32},
		{32, 37}
	},
	new byte[,] {
	},
	new byte[,] {
		{4, 38},
		{5, 33},
		{6, 37},
		{9, 26},
		{13, 16},
		{14, 39},
		{15, 35},
		{16, 22},
		{25, 21},
		{29, 29},
		{31, 24},
		{33, 42},
		{36, 44},
		{38, 43},
		{39, 45}
	},
	new byte[,] {
		{2, 42},
		{3, 26},
		{5, 44},
		{6, 29},
		{9, 45},
		{10, 43},
		{11, 35},
		{12, 38},
		{13, 16},
		{14, 22},
		{18, 21},
		{19, 24},
		{22, 50},
		{28, 31},
		{29, 36}
	},
	new byte[,] {
		{2, 44},
		{5, 42},
		{9, 43},
		{10, 45},
		{16, 37},
		{17, 39},
		{18, 33},
		{22, 48},
		{25, 46},
		{27, 47},
		{31, 30},
		{32, 36}
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 14},
		{4, 29},
		{5, 3},
		{6, 25},
		{8, 9},
		{13, 19},
		{14, 28},
		{15, 23},
		{19, 6},
		{22, 15},
		{24, 11},
		{33, 48},
		{39, 44}
	},
	new byte[,] {
		{2, 44},
		{3, 29},
		{6, 28},
		{10, 48},
		{11, 9},
		{12, 15},
		{13, 3},
		{14, 25},
		{18, 19},
		{19, 23},
		{21, 38},
		{22, 45},
		{24, 41},
		{27, 50},
		{28, 0},
		{29, 8},
		{30, 34},
		{31, 31},
		{33, 36}
	},
	new byte[,] {
		{2, 43},
		{3, 39},
		{5, 47},
		{6, 40},
		{9, 48},
		{10, 46},
		{11, 8},
		{12, 14},
		{13, 1},
		{14, 34},
		{18, 30},
		{19, 36},
		{22, 44},
		{28, 6},
		{29, 11}
	},
	new byte[,] {
	},
	new byte[,] {
		{3, 15},
		{5, 48},
		{6, 14},
		{10, 44},
		{13, 6},
		{14, 11},
		{16, 25},
		{17, 28},
		{18, 3},
		{19, 9},
		{21, 41},
		{24, 40},
		{25, 47},
		{27, 49},
		{28, 32},
		{30, 37},
		{31, 17},
		{32, 22},
		{33, 35}
	},
	new byte[,] {
		{0, 35},
		{3, 22},
		{4, 49},
		{7, 47},
		{8, 17},
		{9, 41},
		{11, 28},
		{12, 9},
		{13, 15},
		{14, 44},
		{15, 3},
		{16, 25},
		{19, 48},
		{20, 0},
		{21, 45},
		{22, 8},
		{23, 34},
		{24, 50}
	},
	new byte[,] {
		{3, 37},
		{6, 47},
		{7, 49},
		{8, 32},
		{11, 40},
		{12, 8},
		{13, 14},
		{14, 43},
		{15, 1},
		{16, 34},
		{18, 48},
		{19, 46},
		{20, 6},
		{21, 44},
		{22, 11}
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 45},
		{3, 38},
		{5, 43},
		{6, 39},
		{9, 44},
		{10, 42},
		{13, 33},
		{14, 37},
		{16, 22},
		{17, 29},
		{18, 16},
		{19, 35},
		{25, 48},
		{31, 19},
		{32, 23}
	},
	new byte[,] {
		{3, 23},
		{6, 44},
		{7, 48},
		{8, 19},
		{11, 29},
		{12, 35},
		{13, 38},
		{14, 42},
		{15, 16},
		{16, 22},
		{18, 45},
		{19, 43},
		{20, 31},
		{21, 50},
		{22, 36}
	},
	new byte[,] {
		{3, 36},
		{4, 47},
		{5, 48},
		{6, 43},
		{7, 46},
		{8, 30},
		{11, 39},
		{14, 45},
		{15, 33},
		{16, 37},
		{18, 44},
		{19, 42}
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 12},
		{5, 7},
		{8, 11},
		{17, 26},
		{19, 2},
		{20, 25},
		{22, 13},
		{24, 9},
		{25, 18},
		{27, 27},
		{28, 23},
		{33, 50},
		{36, 46},
		{38, 49},
		{39, 42}
	},
	new byte[,] {
		{2, 45},
		{9, 50},
		{11, 10},
		{12, 12},
		{13, 5},
		{21, 26},
		{22, 42},
		{24, 27},
		{25, 49},
		{27, 46},
		{28, 2},
		{29, 9},
		{30, 25},
		{31, 18},
		{33, 23}
	},
	new byte[,] {
		{2, 42},
		{5, 49},
		{9, 46},
		{10, 50},
		{11, 11},
		{12, 13},
		{13, 7},
		{22, 43},
		{25, 47},
		{27, 48},
		{28, 4},
		{29, 10}
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 46},
		{3, 13},
		{5, 50},
		{6, 12},
		{9, 49},
		{10, 42},
		{11, 25},
		{12, 27},
		{13, 2},
		{14, 9},
		{18, 7},
		{19, 11},
		{22, 47},
		{28, 20},
		{29, 24}
	},
	new byte[,] {
		{0, 24},
		{4, 47},
		{5, 49},
		{8, 20},
		{9, 27},
		{12, 10},
		{13, 12},
		{14, 45},
		{15, 5},
		{18, 50},
		{20, 2},
		{21, 42},
		{22, 9},
		{23, 25},
		{24, 46}
	},
	new byte[,] {
		{5, 47},
		{6, 49},
		{12, 11},
		{13, 13},
		{14, 42},
		{15, 7},
		{18, 46},
		{19, 50},
		{20, 4},
		{21, 43},
		{22, 10},
		{24, 48}
	},
	new byte[,] {
	},
	new byte[,] {
		{2, 43},
		{5, 45},
		{9, 42},
		{10, 44},
		{11, 24},
		{12, 26},
		{13, 21},
		{22, 46},
		{25, 50},
		{27, 49},
		{28, 18},
		{29, 23}
	},
	new byte[,] {
		{5, 50},
		{6, 45},
		{12, 24},
		{13, 26},
		{14, 43},
		{15, 21},
		{18, 42},
		{19, 44},
		{20, 18},
		{21, 46},
		{22, 23},
		{24, 49}
	},
	new byte[,] {
		{4, 49},
		{5, 46},
		{6, 42},
		{7, 50},
		{14, 44},
		{18, 43},
		{19, 45},
		{21, 48},
		{24, 47}
	}
};
public static readonly int[,] edgePairs = {
   {0, 1}, {1, 2}, {2, 3}, {3, 0}, {4, 5}, {5, 6}, {6, 7}, {7, 4}, {0, 4}, {1, 5}, {2, 6}, {3, 7}
};
}
}
